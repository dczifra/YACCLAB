  
GPU 2D 8-way connectivity:
   
  execute: true
  
  #  Tests to perform and their number of repetitions
  # -------------------------------------------------
  
  perform: 
    correctness:        false
    average:            true
    average_with_steps: true
    density:            false
    granularity:        false
    memory:             false
    blocksize:          false
  
  correctness_tests: 
    eight_connectivity_standard:    true
    eight_connectivity_steps:       true
    eight_connectivity_memory:      false
    eight_connectivity_blocksize:   false
   
  tests_number: 
    average:             10
    average_with_steps:  10
    density:             10
    granularity:         10
    blocksize:           10
  
  # List of 2D GPU CCL algorithms to test
  # -------------------------------------
  
  algorithms:
    - UF
    - OLE
    #- BRB
    - STAVA
    - RASMUSSON
    #- ACCL
    - DLS
    - M8DLS
    - LBUF
    - BE
    - DLP
    - KE
    - HA8
    - C_SAUF
    - C_BBDT
    - C_DRAG
    - BUF
    - BKE

  
  # Datasets to use for each test
  # -----------------------------
  
  # Note that perform correctness tests on labeling_NULL algorithm does not make sense
  check_datasets: ["check", "fingerprints", "hamlet", "medical", "tobacco800", "xdocs"]
  
  # List of datasets on which "Average Runtime Tests" shall be run
  average_datasets: ["check", "fingerprints", "hamlet", "medical", "tobacco800", "xdocs"]
  
  # List of datasets on which "Average Runtime Tests With Steps" shall be run
  average_datasets_with_steps: ["check", "fingerprints", "hamlet", "medical", "tobacco800", "xdocs"]
   
  # List of datasets on which "Memory Tests" shall be run
  memory_datasets: ["3dpes", "fingerprints", "hamlet", "medical", "mirflickr", "tobacco800", "xdocs"]
  
  # List of datasets on which "Blocksize Tests" shall be run
  blocksize_datasets: ["3dpes", "fingerprints", "hamlet", "medical", "mirflickr", "tobacco800", "xdocs"]
  
  blocksize:
    x: [2, 64, 2]
    y: [2, 64, 2]
    z: [1, 1, 1]
  
  # Save the results of each run test
  save_middle_tests: {average: false, average_with_steps: false, density: false, granularity: false}
